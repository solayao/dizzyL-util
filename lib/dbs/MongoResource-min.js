"use strict";var _createClass=function(){function e(e,n){for(var o=0;o<n.length;o++){var t=n[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(n,o,t){return o&&e(n.prototype,o),t&&e(n,t),n}}();function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var MongoDB=require("mongodb"),MongoClient=MongoDB.MongoClient,DBpool=require("./DBpool"),_require=require("./config.json"),mongoConfig=_require.mongoConfig,dbs=_require.dbs,_require2=require("../log/ChalkConsole"),SuccessConsole=_require2.SuccessConsole,ErrorConsole=_require2.ErrorConsole,InsertConsole=_require2.InsertConsole,_require3=require("../type"),isNotEmpty=_require3.isNotEmpty,dbName=dbs[0],MongoResource=function(){function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:mongoConfig,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};_classCallCheck(this,e);var t=n.uri||n.url;t||(t=n.user&&n.pass?"mongodb://"+n.user+":"+n.pass+"@"+n.host+":"+n.port:"mongodb://"+n.host+":"+n.port),isNotEmpty(n.search)&&(t+="?"+Object.keys(n.search).map(function(e){return e+"="+n.search[e]}).join("&"));var r=function(){return MongoClient.connect(t,{useNewUrlParser:!0}).then(function(e){return SuccessConsole("DBpool message",__filename,"Connected MongoDB ("+t+") successfully to server."),e}).catch(function(e){ErrorConsole("DBpool message",__filename,"Connected MongoDB ("+t+") NOT successfully to server!\n\t"+e)})},i=function(e){e.close(),SuccessConsole("DBpool message",__filename,"Closed MongoDB ("+t+") successfully to server.")};this.mongoPool=Object.keys(o).length>0?new DBpool(r,i,o):new DBpool(r,i)}return _createClass(e,[{key:"close",value:function(){this.mongoPool.closePool()}},{key:"action",value:function(e){return this.mongoPool.sqlAction(e,__filename)}},{key:"actionInsert",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(n&&""!==e)return Array.isArray(n)&&0===n.length?[]:this.action(function(o){return new Promise(function(t,r){o.db(dbName).collection(e).insert(n).then(function(o){o.result.hasOwnProperty("ok")&&(SuccessConsole("DBpool message",__filename,"Insert (\n"+JSON.stringify(n)+"\n) to ("+e+") successfully."),InsertConsole("DBpool message",__filename,"Insert (\n"+JSON.stringify(n)+"\n) to ("+e+") successfully."),t(Object.values(o.insertedIds)))}).catch(function(e){return r(e)})})})}},{key:"actionQuery",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(n&&""!==e)return this.action(function(o){return new Promise(function(t,r){try{o.db(dbName).collection(e).find(n).toArray(function(e,n){t(n)})}catch(e){console.log(e)}})})}},{key:"actionAggregate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(n&&""!==e)return this.action(function(o){return new Promise(function(t,r){try{o.db(dbName).collection(e).aggregate(n).toArray(function(e,n){t(n)})}catch(e){console.log(e)}})})}},{key:"actionUpdate",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,t=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(o&&n&&o)return this.action(function(i){return new Promise(function(s,c){i.db(dbName).collection(e).update(n,o,{upsert:t,multi:r}).then(function(n){SuccessConsole("DBpool message",__filename,"Update (\n"+JSON.stringify(o)+"\n) to ("+e+") successfully."),InsertConsole("DBpool message",__filename,"Update (\n"+JSON.stringify(o)+"\n) to ("+e+") successfully."),s()}).catch(function(e){return c(e)})})})}},{key:"actionForClient",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(e){};return this.action(function(n){return e(n)})}},{key:"distinct",value:function(){return this.action(function(e){return new Promise(function(n,o){e.db(dbName).collection("comic").distinct("n").then(function(e){n(e)}).catch(function(e){return o(e)})})})}}]),e}();module.exports=MongoResource;